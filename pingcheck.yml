---
# This Playbook Checks Ping Result of Node
- hosts: all
  gather_facts: true
  gather_subset: "!all"
  ignore_errors: true
  ignore_unreachable: true
  tasks:
    - name: Set facts
      set_fact:
        host_reachable: false
        host_exist: true
        ping_module: "{{ (ansible_facts['os_family'] != 'Windows') | ternary('ping', 'win_ping') }}"
        shell_module: "{{ (ansible_facts['os_family'] != 'Windows') | ternary('shell', 'win_shell') }}"
        method: "{{ (ansible_facts['os_family'] != 'Windows') | ternary('sudo', 'runas') }}"
        py_ps: "{{ (ansible_facts['os_family'] != 'Windows') | ternary('setup_result.ansible_facts.ansible_python', 'setup_result.ansible_facts.ansible_powershell_version') }}"
        isadmin: >-
          whoami;$wid=[System.Security.Principal.WindowsIdentity]::GetCurrent();
          $prp=new-object System.Security.Principal.WindowsPrincipal($wid);
          $adm=[System.Security.Principal.WindowsBuiltInRole]::Administrator;
          $IsAdmin=$prp.IsInRole($adm);write-host Administrator: $isadmin;
      ignore_errors: true

    - name: Validate connection and credentials
      action: >-
        {{ ping_module }}
      register: ping_result
      ignore_errors: true
      ignore_unreachable: true

    - name: Check raw module
      raw: hostname;whoami;
      changed_when: false
      register: raw_result
      ignore_errors: true
      ignore_unreachable: true

    - name: Check Privilege
      raw: "{{ (ansible_facts['os_family'] != 'Windows') | ternary('whoami', isadmin) }}"
      become: "{{ (ansible_facts['os_family'] != 'Windows') | ternary('yes', 'no') }}"
      changed_when: false
      register: priv_result
      ignore_errors: true

    - name: Check Setup
      setup:
        gather_subset: "{{ (ansible_facts['os_family'] != 'Windows') | ternary('!all,!min,python', '!all,!hardware,!network,!virtual,!ohai,!facter') }}"
      changed_when: false
      register: setup_result
      ignore_errors: true

    - name: Able to reach Node
      set_fact:
        host_reachable: true
        job_msg: >-
              "{{ ping_module }} > {{ hostvars['localhost']['host_ip'] }} is reachable"
      when: '"ping" in ping_result and ping_result.ping=="pong"'
      ignore_errors: true

    - name: Unable to Ping Node
      set_fact:
        host_reachable: false
        job_msg: >-
              "{{ ping_module }} > {{ hostvars['localhost']['host_ip'] }} is not reachable"
      when: '"unreachable" in ping_result and ping_result.unreachable'
      ignore_errors: true

    - name: Unable to reach Node(raw)
      set_fact:
        host_reachable: false
        job_msg: >-
              "{{ hostvars['localhost']['host_ip'] }} is not reachable. Error: {{ raw_result.msg }}"
      when: raw_result.unreachable
      ignore_errors: true

    - debug: msg="{{ ansible_facts['os_family'] }} , {{ group_names }} , {{ ping_module }} , {{ py_ps }} "
      ignore_errors: true
#    - debug: var=group_names
#      ignore_errors: true
              
