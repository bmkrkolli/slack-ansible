---
# This is a Master Playbook that executes command on node
# Author: B M Krishna Reddy Kolli
- hosts: "{{ IPAddress }}"
  gather_facts: true
  gather_subset: "all"
  vars:
    os_type: "{{ ansible_facts['os_family'] }}"
    command: "{{ Command }}"
  tasks:
    - name: "Windows"
      win_shell: "{{ command }}"
      changed_when: false
      register: winl1_info
      when: os_type == "Windows"
      ignore_errors: true

    - name: "Windows Service"
      win_service: 
        name: "{{ service_name }}"      
      register: service_state
      failed_when: service_state is not defined
      changed_when: false
      when: os_type == "Windows"
      ignore_errors: true

    - name: "Windows file copy"
      win_copy: 
        src: \\8.9.9.16\utils\wmi_exporter-0.4.3-amd64.msi
        dest: c:\temp\wmi_exporter-0.4.3-amd64.msi
      register: cp
      when: os_type == "Windows"
      ignore_errors: true

    - name: mount Q
      win_shell: 'New-PSDrive -Name "Q" -PSProvider "FileSystem" -Root "\\8.9.9.16\utils";Get-PSDrive Q;copy-item -path "Q:\wmi_exporter-0.4.3-amd64.msi" -destination "C:\temp\wmi_exporter-0.4.3-amd64.msi";Remove-PSDrive Q;'
      ignore_errors: true

    - name: "Windows Level 1 Diagnosis"
      win_shell: >-
        $hn = hostname; $os = gwmi Win32_OperatingSystem; $osn = $os.Caption;
        $app = powercfg /GETACTIVESCHEME; $lbt=$os | select @{LABEL='BT'; 
        EXPRESSION={$_.ConverttoDateTime($_.lastbootuptime)}};
        $ut = (get-date) - $lbt.BT; $apls = get-localuser administrator;
        Write-Host "Hostname: " $hn ;
        Write-Host "OS: " $osn; 
        Write-Host "UpTime: " $lbt.BT "(" $ut ")";
        Write-Host "ActivePowerPlan: " $app ;
        Write-Host "LocalAdminPwdLastSet: " $apls.PasswordLastSet;
        get-wmiobject -class win32_quickfixengineering;
      changed_when: false
      register: winl1_info
      when: os_type == "Windows"
      ignore_errors: true

    - debug: 
        msg: "Hostname: {{ ansible_facts['hostname'] }}"
      ignore_errors: true

    - debug: 
        msg: "OS: {{ ansible_facts['os_name'] }}"
      ignore_errors: true

    - debug: 
        msg: "LastBootUpTime: {{ ansible_facts['lastboot'] }} , UpTime: {{ ansible_facts['uptime_seconds'] }}"
      ignore_errors: true